一、UNIX_Shell
1、思路：1）首先是在输入命令的时候，解析命令，将输入的字符串做处理存进args中。若字符串最后是&，则将p_wait_flag设置为1，在后面执行时，父进程和子进程可以并发的执行。
2）若args中存入的命令的是！！则将保存的上一条命令保存进args中，否则将新的命令存进his_com中。
3）若命令中存在“<”或者“>”就将重定向的标记设置为1，然后再执行命令的时候执行重定向的命令。>是指覆盖重定向，是指将原来的数据覆盖掉，将命令的输出重定向输入到>后面的文件中.<是指重定向标准输入，是指将文件中的数据输入。
4）若命令中存在“|”执行管道。管道是用来连接命令的，将前面命令的正确输出给后面命令的标准输入。在创建一个子进程，在执行时先使得“|”左边的进程执行，将其输出结果作为输入，在执行右边的进程。
 
 
2、Task information
1）在proc_init中，设置proc/pid文件的创建函数，内核卸载时在proc_exit中调用函数remove_proc_entry将其文件删除。
2）在proc_write中首先将echo传送进来的数据通过函数row_copy_from_user将其复制到内核内存中，此时k_mem中储存着一个数据，就是用echo传入的pid。用kstrtol将字符串变为long型整数。
3）通过proc_read访问其中的值，然后将所有要的信息存在信息缓存区，调用dmesg是输出到用户界面。
 



